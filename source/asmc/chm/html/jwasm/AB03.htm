<HTML>
<HEAD><TITLE>DOS64 - Switch to Long Mode and Back</TITLE></HEAD>
<BODY>
<H1>DOS64 - Switch to Long Mode and Back</H1>

<TABLE BORDER=0 CELLSPACING=4 CELLPADDING=4 WIDTH="100%">
<TR BGCOLOR="#E0E0E0"><TD>
<pre>

;<font color="#808080">--- DOS program which switches to long-mode and back.</font>
;<font color="#808080">--- Note: requires at least JWasm v2.</font>
;<font color="#808080">--- Also: needs a 64bit cpu in real-mode to run.</font>
;<font color="#808080">--- Parts of the source are based on samples supplied by</font>
;<font color="#808080">--- sinsi and Tomasz Grysztar in the FASM forum.</font>
;<font color="#808080">--- To create the binary enter:</font>
;<font color="#808080">---  JWasm -mz DOS64.asm</font>

    <b>.x64p</b>

;<font color="#808080">--- 16bit start/exit code</font>

_TEXT16 <b>segment</b> use16 para public 'CODE'

    <b>assume</b> <font color="#00B000">ds</font>:_TEXT16
    <b>assume</b> <font color="#00B000">es</font>:_TEXT16

GDTR <b>label</b> <font color="#800000">fword</font>        ;<font color="#808080"> Global Descriptors Table Register</font>
    <b>dw</b> 4*8-1            ;<font color="#808080"> limit of GDT (size minus one)</font>
    <b>dd</b> <font color="#808000">offset</font> GDT       ;<font color="#808080"> linear address of GDT</font>
IDTR <b>label</b> <font color="#800000">fword</font>        ;<font color="#808080"> Interrupt Descriptor Table Register</font>
    <b>dw</b> 256*16-1         ;<font color="#808080"> limit of IDT (size minus one)</font>
    <b>dd</b> 0                ;<font color="#808080"> linear address of IDT</font>
nullidt <b>label</b> <font color="#800000">fword</font>
    <b>dw</b> 3FFh
    <b>dd</b> 0
  
    <b>align</b> 8
GDT <b>dq</b> 0                    ;<font color="#808080"> null descriptor</font>
    <b>dw</b> 0FFFFh,0,9A00h,0AFh  ;<font color="#808080"> 64-bit code descriptor</font>
    <b>dw</b> 0FFFFh,0,9A00h,000h  ;<font color="#808080"> compatibility mode code descriptor</font>
    <b>dw</b> 0FFFFh,0,9200h,000h  ;<font color="#808080"> compatibility mode data descriptor</font>

wPICMask <b>dw</b> 0   ;<font color="#808080"> variable to save/restore PIC masks</font>

start16:
    <font color="#0000E0">push</font> <font color="#00B000">cs</font>
    <font color="#0000E0">pop</font> <font color="#00B000">ds</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,<font color="#00B000">cs</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">eax</font>,<font color="#00B000">ax</font>
    <font color="#0000E0">shl</font> <font color="#00B000">eax</font>,4
    <font color="#0000E0">add</font> <font color="#800000">dword</font> <font color="#808000">ptr</font> [GDTR+2], <font color="#00B000">eax</font> ;<font color="#808080"> convert offset to linear address</font>
    <font color="#0000E0">mov</font> <font color="#800000">word</font> <font color="#808000">ptr</font> [GDT+2*8+2], <font color="#00B000">ax</font>
    <font color="#0000E0">mov</font> <font color="#800000">word</font> <font color="#808000">ptr</font> [GDT+3*8+2], <font color="#00B000">ax</font>
    <font color="#0000E0">shr</font> <font color="#00B000">eax</font>,16
    <font color="#0000E0">mov</font> <font color="#800000">byte</font> <font color="#808000">ptr</font> [GDT+2*8+4], <font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#800000">byte</font> <font color="#808000">ptr</font> [GDT+3*8+4], <font color="#00B000">al</font>

    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,<font color="#00B000">ss</font>
    <font color="#0000E0">mov</font> <font color="#00B000">dx</font>,<font color="#00B000">es</font>
    <font color="#0000E0">sub</font> <font color="#00B000">ax</font>,<font color="#00B000">dx</font>
    <font color="#0000E0">mov</font> <font color="#00B000">bx</font>,<font color="#00B000">sp</font>
    <font color="#0000E0">shr</font> <font color="#00B000">bx</font>,4
    <font color="#0000E0">add</font> <font color="#00B000">bx</font>,<font color="#00B000">ax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,4Ah
    <font color="#0000E0">int</font> 21h         ;<font color="#808080"> free unused memory</font>
    <font color="#0000E0">push</font> <font color="#00B000">cs</font>
    <font color="#0000E0">pop</font> <font color="#00B000">es</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,<font color="#00B000">ss</font>
    <font color="#0000E0">mov</font> <font color="#00B000">dx</font>,<font color="#00B000">cs</font>
    <font color="#0000E0">sub</font> <font color="#00B000">ax</font>,<font color="#00B000">dx</font>
    <font color="#0000E0">shl</font> <font color="#00B000">ax</font>,4
    <font color="#0000E0">add</font> <font color="#00B000">ax</font>,<font color="#00B000">sp</font>
    <font color="#0000E0">push</font> <font color="#00B000">ds</font>
    <font color="#0000E0">pop</font> <font color="#00B000">ss</font>
    <font color="#0000E0">mov</font> <font color="#00B000">sp</font>,<font color="#00B000">ax</font>       ;<font color="#808080"> make a TINY model, CS=SS=DS=ES</font>

    <font color="#0000E0">smsw</font> <font color="#00B000">ax</font>
    <font color="#0000E0">test</font> <font color="#00B000">al</font>,1
    <font color="#0000E0">jz</font> @F
    <font color="#0000E0">mov</font> <font color="#00B000">dx</font>,<font color="#808000">offset</font> err1
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,9
    <font color="#0000E0">int</font> 21h
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,4Ch
    <font color="#0000E0">int</font> 21h
err1 <b>db</b> "Mode is V86. Need REAL mode to switch to LONG mode!",13,10,'$'
@@:
    <font color="#0000E0">xor</font> <font color="#00B000">edx</font>,<font color="#00B000">edx</font>
    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,80000001h   ;<font color="#808080"> test if long-mode is supported</font>
    <font color="#0000E0">cpuid</font>
    <font color="#0000E0">test</font> <font color="#00B000">edx</font>,20000000h
    <font color="#0000E0">jnz</font> @F
    <font color="#0000E0">mov</font> <font color="#00B000">dx</font>,<font color="#808000">offset</font> err2
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,9
    <font color="#0000E0">int</font> 21h
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,4Ch
    <font color="#0000E0">int</font> 21h
err2 <b>db</b> "No 64bit cpu detected.",13,10,'$'
@@:
    <font color="#0000E0">mov</font> <font color="#00B000">bx</font>,1000h
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,48h
    <font color="#0000E0">int</font> 21h
    <font color="#0000E0">jnc</font> @F
    <font color="#0000E0">mov</font> <font color="#00B000">dx</font>,<font color="#808000">offset</font> err3
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,9
    <font color="#0000E0">int</font> 21h
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,4Ch
    <font color="#0000E0">int</font> 21h
err3 <b>db</b> "Out of memory",13,10,'$'
@@:
    <font color="#0000E0">add</font> <font color="#00B000">ax</font>,100h-1   ;<font color="#808080"> align to page boundary</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,0
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>,<font color="#00B000">ax</font>

;<font color="#808080">--- setup page directories and tables</font>

    <font color="#0000E0">sub</font> <font color="#00B000">di</font>,<font color="#00B000">di</font>
    <font color="#0000E0">mov</font> <font color="#00B000">cx</font>,4096
    <font color="#0000E0">sub</font> <font color="#00B000">eax</font>,<font color="#00B000">eax</font>
    <font color="#0000E0">rep</font> <font color="#0000E0">stosd</font>       ;<font color="#808080"> clear 4 pages</font>

    <font color="#0000E0">sub</font> <font color="#00B000">di</font>,<font color="#00B000">di</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,<font color="#00B000">es</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">eax</font>,<font color="#00B000">ax</font>
    <font color="#0000E0">shl</font> <font color="#00B000">eax</font>,4
    <font color="#0000E0">mov</font> <font color="#00B000">cr3</font>,<font color="#00B000">eax</font>             ;<font color="#808080"> load page-map level-4 base</font>

    <font color="#0000E0">lea</font> <font color="#00B000">edx</font>, [<font color="#00B000">eax</font>+5000h]
    <font color="#0000E0">mov</font> <font color="#800000">dword</font> <font color="#808000">ptr</font> [IDTR+2], <font color="#00B000">edx</font>

    <font color="#0000E0">or</font> <font color="#00B000">eax</font>,111b
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, 1000h
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+0000h],<font color="#00B000">eax</font>   ;<font color="#808080"> first PDP table</font>
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, 1000h
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+1000h],<font color="#00B000">eax</font>   ;<font color="#808080"> first page directory</font>
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, 1000h
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+2000h],<font color="#00B000">eax</font>   ;<font color="#808080"> first page table</font>
    <font color="#0000E0">mov</font> <font color="#00B000">di</font>,3000h            ;<font color="#808080"> address of first page table</font>
    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,0 + 111b
    <font color="#0000E0">mov</font> <font color="#00B000">cx</font>,256              ;<font color="#808080"> number of pages to map (1 MB)</font>
@@:
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">add</font> <font color="#00B000">di</font>,4
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>,1000h
    <font color="#0000E0">loop</font> @B

;<font color="#808080">--- setup ebx/rbx with linear address of _TEXT</font>

    <font color="#0000E0">mov</font> <font color="#00B000">bx</font>,_TEXT
    <font color="#0000E0">movzx</font> <font color="#00B000">ebx</font>,<font color="#00B000">bx</font>
    <font color="#0000E0">shl</font> <font color="#00B000">ebx</font>,4
    <font color="#0000E0">add</font> [llg], <font color="#00B000">ebx</font>

;<font color="#808080">--- create IDT</font>

    <font color="#0000E0">mov</font> <font color="#00B000">di</font>,5000h
    <font color="#0000E0">mov</font> <font color="#00B000">cx</font>,32
    <font color="#0000E0">mov</font> <font color="#00B000">edx</font>, <font color="#808000">offset</font> exception
    <font color="#0000E0">add</font> <font color="#00B000">edx</font>, <font color="#00B000">ebx</font>
make_exc_gates:
    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#00B000">edx</font>
    <font color="#0000E0">stosw</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,8
    <font color="#0000E0">stosw</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,8E00h
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">xor</font> <font color="#00B000">eax</font>, <font color="#00B000">eax</font>
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">add</font> <font color="#00B000">edx</font>,4
    <font color="#0000E0">loop</font> make_exc_gates
    <font color="#0000E0">mov</font> <font color="#00B000">cx</font>,256-32
make_int_gates:
    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#808000">offset</font> interrupt
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, <font color="#00B000">ebx</font>
    <font color="#0000E0">stosw</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,8
    <font color="#0000E0">stosw</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,8E00h
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">xor</font> <font color="#00B000">eax</font>, <font color="#00B000">eax</font>
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">stosd</font>
    <font color="#0000E0">loop</font> make_int_gates

    <font color="#0000E0">mov</font> <font color="#00B000">di</font>,5000h
    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>, <font color="#00B000">ebx</font>
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, <font color="#808000">offset</font> clock
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+80h*16+0],<font color="#00B000">ax</font> ;<font color="#808080"> set IRQ 0 handler</font>
    <font color="#0000E0">shr</font> <font color="#00B000">eax</font>,16
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+80h*16+6],<font color="#00B000">ax</font>

    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>, <font color="#00B000">ebx</font>
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, <font color="#808000">offset</font> keyboard
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+81h*16+0],<font color="#00B000">ax</font> ;<font color="#808080"> set IRQ 1 handler</font>
    <font color="#0000E0">shr</font> <font color="#00B000">eax</font>,16
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>:[<font color="#00B000">di</font>+81h*16+6],<font color="#00B000">ax</font>

;<font color="#808080">--- clear NT flag</font>

    <font color="#0000E0">pushf</font>
    <font color="#0000E0">pop</font> <font color="#00B000">ax</font>
    <font color="#0000E0">and</font> <font color="#00B000">ah</font>,0BFh
    <font color="#0000E0">push</font> <font color="#00B000">ax</font>
    <font color="#0000E0">popf</font>

;<font color="#808080">--- reprogram PIC: change IRQ 0-7 to INT 80h-87h, IRQ 8-15 to INT 88h-8Fh</font>

    <font color="#0000E0">cli</font>
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,0A1h
    <font color="#0000E0">mov</font> <font color="#00B000">ah</font>,<font color="#00B000">al</font>
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,21h
    <font color="#0000E0">mov</font> [wPICMask],<font color="#00B000">ax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,10001b       ;<font color="#808080"> begin PIC 1 initialization</font>
    <font color="#0000E0">out</font> 20h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,10001b       ;<font color="#808080"> begin PIC 2 initialization</font>
    <font color="#0000E0">out</font> 0A0h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,80h          ;<font color="#808080"> IRQ 0-7: interrupts 80h-87h</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,88h          ;<font color="#808080"> IRQ 8-15: interrupts 88h-8Fh</font>
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,100b         ;<font color="#808080"> slave connected to IRQ2</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,2
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,1            ;<font color="#808080"> Intel environment, manual EOI</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,21h
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,11111100b    ;<font color="#808080"> enable only clock and keyboard IRQ</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,0A1h
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,11111111b
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>

    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#00B000">cr4</font>
    <font color="#0000E0">or</font> <font color="#00B000">eax</font>,1 <font color="#0000E0">shl</font> 5
    <font color="#0000E0">mov</font> <font color="#00B000">cr4</font>,<font color="#00B000">eax</font>         ;<font color="#808080"> enable physical-address extensions (PAE)</font>

    <font color="#0000E0">mov</font> <font color="#00B000">ecx</font>,0C0000080h  ;<font color="#808080"> EFER MSR</font>
    <font color="#0000E0">rdmsr</font>
    <font color="#0000E0">or</font> <font color="#00B000">eax</font>,1 <font color="#0000E0">shl</font> 8      ;<font color="#808080"> enable long mode</font>
    <font color="#0000E0">wrmsr</font>

    <font color="#0000E0">lgdt</font> [GDTR]
    <font color="#0000E0">lidt</font> [IDTR]

    <font color="#0000E0">mov</font> <font color="#00B000">cx</font>,<font color="#00B000">ss</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">ecx</font>,<font color="#00B000">cx</font>        ;<font color="#808080"> get base of SS</font>
    <font color="#0000E0">shl</font> <font color="#00B000">ecx</font>,4
    <font color="#0000E0">movzx</font> <font color="#00B000">esp</font>,<font color="#00B000">sp</font>
    <font color="#0000E0">add</font> <font color="#00B000">ecx</font>, <font color="#00B000">esp</font>        ;<font color="#808080"> ECX=linear address of current SS:ESP</font>

    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#00B000">cr0</font>
    <font color="#0000E0">or</font> <font color="#00B000">eax</font>,80000001h
    <font color="#0000E0">mov</font> <font color="#00B000">cr0</font>,<font color="#00B000">eax</font>         ;<font color="#808080"> enable paging + pmode</font>

    <b>db</b> 66h, 0EAh        ;<font color="#808080"> jmp 0008:oooooooo</font>
llg <b>dd</b> <font color="#808000">offset</font> long_start
    <b>dw</b> 8

;<font color="#808080">--- switch back to real-mode and exit</font>

backtoreal:
    <font color="#0000E0">cli</font>

    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#00B000">cr0</font>
    <font color="#0000E0">and</font> <font color="#00B000">eax</font>,7FFFFFFFh   ;<font color="#808080"> disable paging</font>
    <font color="#0000E0">mov</font> <font color="#00B000">cr0</font>,<font color="#00B000">eax</font>

    <font color="#0000E0">mov</font> <font color="#00B000">ecx</font>,0C0000080h  ;<font color="#808080"> EFER MSR</font>
    <font color="#0000E0">rdmsr</font>
    <font color="#0000E0">and</font> <font color="#00B000">ah</font>,<font color="#0000E0">not</font> 1h       ;<font color="#808080"> disable long mode (EFER.LME=0)</font>
    <font color="#0000E0">wrmsr</font>

    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,24           ;<font color="#808080"> set SS,DS and ES to 64k data</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ss</font>,<font color="#00B000">ax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ds</font>,<font color="#00B000">ax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">es</font>,<font color="#00B000">ax</font>

    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#00B000">cr0</font>         ;<font color="#808080"> switch to real mode</font>
    <font color="#0000E0">and</font> <font color="#00B000">al</font>,0FEh
    <font color="#0000E0">mov</font> <font color="#00B000">cr0</font>, <font color="#00B000">eax</font>

    <b>db</b> 0eah             ;<font color="#808080"> clear instruction cache, CS=real-mode seg</font>
    <b>dw</b> $+4
    <b>dw</b> _TEXT16

    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,STACK        ;<font color="#808080"> SS=real-mode seg</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ss</font>, <font color="#00B000">ax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">sp</font>,4096

    <font color="#0000E0">push</font> <font color="#00B000">cs</font>             ;<font color="#808080"> DS=real-mode _TEXT16 seg</font>
    <font color="#0000E0">pop</font> <font color="#00B000">ds</font>

    <font color="#0000E0">lidt</font> [nullidt]      ;<font color="#808080"> IDTR=real-mode compatible values</font>

    <font color="#0000E0">mov</font> <font color="#00B000">eax</font>,<font color="#00B000">cr4</font>
    <font color="#0000E0">and</font> <font color="#00B000">al</font>,<font color="#0000E0">not</font> 20h      ;<font color="#808080"> disable physical-address extensions (PAE)</font>
    <font color="#0000E0">mov</font> <font color="#00B000">cr4</font>,<font color="#00B000">eax</font>

;<font color="#808080">--- reprogram PIC: change IRQ 0-7 to INT 08h-0Fh, IRQ 8-15 to INT 70h-77h</font>

    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,10001b       ;<font color="#808080"> begin PIC 1 initialization</font>
    <font color="#0000E0">out</font> 20h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,10001b       ;<font color="#808080"> begin PIC 2 initialization</font>
    <font color="#0000E0">out</font> 0A0h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,08h          ;<font color="#808080"> IRQ 0-7: back to ints 8h-Fh</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,70h          ;<font color="#808080"> IRQ 8-15: back to ints 70h-77h</font>
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,100b         ;<font color="#808080"> slave connected to IRQ2</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,2
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,1            ;<font color="#808080"> Intel environment, manual EOI</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,21h

    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,[wPICMask]   ;<font color="#808080"> restore PIC masks</font>
    <font color="#0000E0">out</font> 21h,<font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,<font color="#00B000">ah</font>
    <font color="#0000E0">out</font> 0A1h,<font color="#00B000">al</font>

    <font color="#0000E0">sti</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,4c00h
    <font color="#0000E0">int</font> 21h

_TEXT16 <b>ends</b>

;<font color="#808080">--- here's the 64bit code segment.</font>
;<font color="#808080">--- since 64bit code is always flat but the DOS mz format is segmented,</font>
;<font color="#808080">--- there are restrictions, because the assembler doesn't know the</font>
;<font color="#808080">--- linear address where the 64bit segment will be loaded:</font>
;<font color="#808080">--- + direct addressing with constants isn't possible (mov [0B8000h],rax)</font>
;<font color="#808080">---   since the rip-relative address will be calculated wrong.</font>
;<font color="#808080">--- + 64bit offsets (mov rax, offset &lt;var&gt;) must be adjusted by the linear</font>
;<font color="#808080">---   address where the 64bit segment was loaded (is in rbx).</font>
;<font color="#808080">---</font>
;<font color="#808080">--- rbx must preserve linear address of _TEXT</font>

_TEXT <b>segment</b> para use64 public 'CODE'

    <b>assume</b> <font color="#00B000">ds</font>:FLAT, <font color="#00B000">es</font>:FLAT

long_start:

    <font color="#0000E0">xor</font> <font color="#00B000">eax</font>,<font color="#00B000">eax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ss</font>,<font color="#00B000">eax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">esp</font>,<font color="#00B000">ecx</font>
    <font color="#0000E0">sti</font>             ;<font color="#808080"> now interrupts can be used</font>
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> "Hello 64bit",10,0
nextcmd:
    <font color="#0000E0">mov</font> <font color="#00B000">r8b</font>,0       ;<font color="#808080"> r8b will be filled by the keyboard irq routine</font>
nocmd:
    <font color="#0000E0">cmp</font> <font color="#00B000">r8b</font>,0
    <font color="#0000E0">jz</font> nocmd
    <font color="#0000E0">cmp</font> <font color="#00B000">r8b</font>,1       ;<font color="#808080"> ESC?</font>
    <font color="#0000E0">jz</font> esc_pressed
    <font color="#0000E0">cmp</font> <font color="#00B000">r8b</font>,13h     ;<font color="#808080"> 'r'?</font>
    <font color="#0000E0">jz</font> r_pressed
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> "unknown key ",0
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,<font color="#00B000">r8b</font>
    <font color="#0000E0">call</font> WriteB
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,0
    jmp nextcmd

;<font color="#808080">--- 'r' key: display some register contents</font>

r_pressed:
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,"cr0=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,<font color="#00B000">cr0</font>
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,"cr2=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,<font color="#00B000">cr2</font>
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,"cr3=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,<font color="#00B000">cr3</font>
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,"cr4=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,<font color="#00B000">cr4</font>
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,"cr8=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,<font color="#00B000">cr8</font>
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,0
    jmp nextcmd

;<font color="#808080">--- ESC: back to real-mode</font>

esc_pressed:
    jmp [bv]
bv  <b>label</b> <font color="#800000">fword</font>
    <b>dd</b> <font color="#808000">offset</font> backtoreal
    <b>dw</b> 16

;<font color="#808080">--- screen output helpers</font>

;<font color="#808080">--- scroll screen up one line</font>
;<font color="#808080">--- rsi = linear address start of last line</font>
;<font color="#808080">--- rbp = linear address of BIOS area (0x400)</font>
scroll_screen:
    <font color="#0000E0">cld</font>
    <font color="#0000E0">mov</font> <font color="#00B000">edi</font>,<font color="#00B000">esi</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">eax</font>,<font color="#800000">word</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+4Ah]
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">lea</font> <font color="#00B000">rsi</font>, [<font color="#00B000">rsi</font>+2*<font color="#00B000">rax</font>]
    <font color="#0000E0">mov</font> <font color="#00B000">cl</font>, [<font color="#00B000">rbp</font>+84h]
    <font color="#0000E0">mul</font> <font color="#00B000">cl</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ecx</font>,<font color="#00B000">eax</font>
    <font color="#0000E0">rep</font> <font color="#0000E0">movsw</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rcx</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ax</font>,0720h
    <font color="#0000E0">rep</font> <font color="#0000E0">stosw</font>
    <font color="#0000E0">ret</font>

WriteChr:
    <font color="#0000E0">push</font> <font color="#00B000">rbp</font>
    <font color="#0000E0">push</font> <font color="#00B000">rdi</font>
    <font color="#0000E0">push</font> <font color="#00B000">rsi</font>
    <font color="#0000E0">push</font> <font color="#00B000">rbx</font>
    <font color="#0000E0">push</font> <font color="#00B000">rcx</font>
    <font color="#0000E0">push</font> <font color="#00B000">rdx</font>
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">edi</font>,0B8000h
    <font color="#0000E0">mov</font> <font color="#00B000">ebp</font>,400h
    <font color="#0000E0">cmp</font> <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+63h],0B4h
    <font color="#0000E0">jnz</font> @F
    <font color="#0000E0">xor</font> <font color="#00B000">di</font>,<font color="#00B000">di</font>
@@:
    <font color="#0000E0">movzx</font> <font color="#00B000">ebx</font>, <font color="#800000">word</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+4Eh]
    <font color="#0000E0">add</font> <font color="#00B000">edi</font>, <font color="#00B000">ebx</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">ebx</font>, <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+62h]
    <font color="#0000E0">mov</font> <font color="#00B000">esi</font>, <font color="#00B000">edi</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">ecx</font>, <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rbx</font>*2+<font color="#00B000">rbp</font>+50h+1] ;<font color="#808080">ROW</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">eax</font>, <font color="#800000">word</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+4Ah]
    <font color="#0000E0">mul</font> <font color="#00B000">ecx</font>
    <font color="#0000E0">movzx</font> <font color="#00B000">edx</font>, <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rbx</font>*2+<font color="#00B000">rbp</font>+50h]  ;<font color="#808080">COL</font>
    <font color="#0000E0">add</font> <font color="#00B000">eax</font>, <font color="#00B000">edx</font>
    <font color="#0000E0">mov</font> <font color="#00B000">dh</font>,<font color="#00B000">cl</font>
    <font color="#0000E0">lea</font> <font color="#00B000">edi</font>, [<font color="#00B000">rdi</font>+<font color="#00B000">rax</font>*2]
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>, [<font color="#00B000">rsp</font>]
    <font color="#0000E0">cmp</font> <font color="#00B000">al</font>, 10
    <font color="#0000E0">jz</font> newline
    <font color="#0000E0">mov</font> [<font color="#00B000">rdi</font>], <font color="#00B000">al</font>
    <font color="#0000E0">mov</font> <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rdi</font>+1], 07
    <font color="#0000E0">inc</font> <font color="#00B000">dl</font>
    <font color="#0000E0">cmp</font> <font color="#00B000">dl</font>, <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+4Ah]
    <font color="#0000E0">jb</font> @F
newline:
    <font color="#0000E0">mov</font> <font color="#00B000">dl</font>, 00
    <font color="#0000E0">inc</font> <font color="#00B000">dh</font>
    <font color="#0000E0">cmp</font> <font color="#00B000">dh</font>, <font color="#800000">byte</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+84h]
    <font color="#0000E0">jbe</font> @F
    <font color="#0000E0">dec</font> <font color="#00B000">dh</font>
    <font color="#0000E0">call</font> scroll_screen
@@:
    <font color="#0000E0">mov</font> [<font color="#00B000">rbx</font>*2+<font color="#00B000">rbp</font>+50h],<font color="#00B000">dx</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rdx</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rcx</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rbx</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rsi</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rdi</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rbp</font>
    <font color="#0000E0">ret</font>

WriteStr:   ;<font color="#808080">write string in rdx</font>
    <font color="#0000E0">push</font> <font color="#00B000">rsi</font>
    <font color="#0000E0">mov</font> <font color="#00B000">rsi</font>, <font color="#00B000">rdx</font>
    <font color="#0000E0">cld</font>
@@:
    <font color="#0000E0">lodsb</font>
    <font color="#0000E0">and</font> <font color="#00B000">al</font>,<font color="#00B000">al</font>
    <font color="#0000E0">jz</font> @F
    <font color="#0000E0">call</font> WriteChr
    jmp @B
@@:
    <font color="#0000E0">pop</font> <font color="#00B000">rsi</font>
    <font color="#0000E0">ret</font>

WriteStrX:  ;<font color="#808080">write string at rip</font>
    <font color="#0000E0">push</font> <font color="#00B000">rsi</font>
    <font color="#0000E0">mov</font> <font color="#00B000">rsi</font>, [<font color="#00B000">rsp</font>+8]
    <font color="#0000E0">cld</font>
@@:
    <font color="#0000E0">lodsb</font>
    <font color="#0000E0">and</font> <font color="#00B000">al</font>,<font color="#00B000">al</font>
    <font color="#0000E0">jz</font> @F
    <font color="#0000E0">call</font> WriteChr
    jmp @B
@@:
    <font color="#0000E0">mov</font> [<font color="#00B000">rsp</font>+8],<font color="#00B000">rsi</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rsi</font>
    <font color="#0000E0">ret</font>

WriteQW:        ;<font color="#808080">write QWord in rax</font>
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">shr</font> <font color="#00B000">rax</font>,32
    <font color="#0000E0">call</font> WriteDW
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
WriteDW:
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">shr</font> <font color="#00B000">rax</font>,16
    <font color="#0000E0">call</font> WriteW
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
WriteW:
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">shr</font> <font color="#00B000">rax</font>,8
    <font color="#0000E0">call</font> WriteB
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
WriteB:     ;<font color="#808080">write Byte in al</font>
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">shr</font> <font color="#00B000">rax</font>,4
    <font color="#0000E0">call</font> WriteNb
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
WriteNb:
    <font color="#0000E0">and</font> <font color="#00B000">al</font>,0Fh
    <font color="#0000E0">add</font> <font color="#00B000">al</font>,'0'
    <font color="#0000E0">cmp</font> <font color="#00B000">al</font>,'9'
    <font color="#0000E0">jbe</font> @F
    <font color="#0000E0">add</font> <font color="#00B000">al</font>,7
@@:
    jmp WriteChr

;<font color="#808080">--- exception handler</font>

exception:
excno = 0
    <b>repeat</b> 32
    <font color="#0000E0">push</font> excno
    jmp @F
    excno = excno+1
    <b>endm</b>
@@:
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,"Exception ",0
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
    <font color="#0000E0">call</font> WriteB
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> " errcode=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,[<font color="#00B000">rsp</font>+0]
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> " rip=",0
    <font color="#0000E0">mov</font> <font color="#00B000">rax</font>,[<font color="#00B000">rsp</font>+8]
    <font color="#0000E0">call</font> WriteQW
    <font color="#0000E0">call</font> WriteStrX
    <b>db</b> 10,0
@@:
    jmp $

;<font color="#808080">--- clock and keyboard interrupts</font>

clock:
    <font color="#0000E0">push</font> <font color="#00B000">rbp</font>
    <font color="#0000E0">mov</font> <font color="#00B000">ebp</font>,400h
    <font color="#0000E0">inc</font> <font color="#800000">dword</font> <font color="#808000">ptr</font> [<font color="#00B000">rbp</font>+6Ch]
    <font color="#0000E0">pop</font> <font color="#00B000">rbp</font>
interrupt:              ;<font color="#808080"> handler for all other interrupts</font>
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,20h
    <font color="#0000E0">out</font> 20h,<font color="#00B000">al</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
    iretq

keyboard:
    <font color="#0000E0">push</font> <font color="#00B000">rax</font>
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,60h
    <font color="#0000E0">test</font> <font color="#00B000">al</font>,80h
    <font color="#0000E0">jnz</font> @F
    <font color="#0000E0">mov</font> <font color="#00B000">r8b</font>, <font color="#00B000">al</font>
@@:
    <font color="#0000E0">in</font> <font color="#00B000">al</font>,61h           ;<font color="#808080"> give finishing information</font>
    <font color="#0000E0">out</font> 61h,<font color="#00B000">al</font>          ;<font color="#808080"> to keyboard...</font>
    <font color="#0000E0">mov</font> <font color="#00B000">al</font>,20h
    <font color="#0000E0">out</font> 20h,<font color="#00B000">al</font>          ;<font color="#808080"> ...and interrupt controller</font>
    <font color="#0000E0">pop</font> <font color="#00B000">rax</font>
    iretq

_TEXT <b>ends</b>

;<font color="#808080">--- 4k stack, used in both modes</font>

STACK <b>segment</b> use16 para stack 'STACK'
    <b>db</b> 4096 <font color="#808000">dup</font> (?)
STACK <b>ends</b>

    <b>end</b> start16
</pre>
</TD></TR>
</TABLE>

</BODY>
</HTML>
