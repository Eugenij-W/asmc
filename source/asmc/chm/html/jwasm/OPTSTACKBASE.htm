<HTML>
<HEAD><TITLE>   3.13 Directive OPTION STACKBASE</TITLE></HEAD>
<BODY>
<H1>   3.13 Directive OPTION STACKBASE</H1>

    The OPTION STACKBASE directive allows to change the way how stack variables -
    defined by the PROC and LOCAL directives - are accessed. Syntax is:
<DL style="color:#008040"> 
<DD>       OPTION STACKBASE:<i>register</i>
</DL>
    <i>register</i> will be the index register that is used for accessing the stack variables.
    The "natural" register for accessing these variables is the [E|R]BP register ( the "frame pointer").
    With OPTION STACKBASE one might set any index register as frame pointer.
<P>
    OPTION STACKBASE will additionally define assembly-time variable <b>@StackBase</b>.
    The assembler will add the value of this variable to the effective address of stack variables.
    @StackBase can be modified just like any userdefined variable - however, it is initialized to zero
    by the PROC directive. The purpose for the introduction of @StackBase is to make it
    feasible to use the "volatile" stack-pointer (ESP/RSP) register as base for accessing stack variables.
<P>
    Finally, OPTION STACKBASE will define another assembly-time variable: <b>@ProcStatus</b>.
    This variable is read-only and will allow to query information about the current procedure's status.
    The information that is returned by @ProcStatus is:
<P>
<TABLE CELLPADDING="4" CELLSPACING="2">
<th BGCOLOR="#C8C8C8">Bit</th><th BGCOLOR="#C8C8C8">Meaning if bit is 1</th>
<TR BGCOLOR="#E8E8E8"><TD>0</TD><TD>inside prologue of current procedure.</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>1</TD><TD>inside epilogue of current procedure.</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>2</TD><TD>"frame-pointer omission" is on for procedure</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>7</TD><TD>prologue of current procedure isn't created yet</TD></TR>
</TABLE>

</BODY>
</HTML>
