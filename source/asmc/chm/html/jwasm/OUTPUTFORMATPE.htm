<HTML>
<HEAD><TITLE>   6.5 PE Output Format</TITLE></HEAD>
<BODY>
<H1>   6.5 PE Output Format</H1>

    The ( Windows ) PE output format ( both 32- and 64-bit ) is a binary format - 
    there's no link step supposed to follow the assembly step. Hence all references
    must be resolved internally, no external references are possible. Since the Windows
    ABI is implemented as a set of dlls that export function names, it's necessary 
    to provide a mechanism to call such external functions - in the PE format this
    is achieved with the help of directive <A HREF="OPTDLLIMPORT.htm">OPTION DLLIMPORT</A>; 
    it allows to attach a module name to function prototypes used by the assembly source
    and consequently give the assembler the means to resolve all references without the help of a linker.
<P>
    The PE format requires a .MODEL FLAT directive in the source code. This directive
    will trigger the creation of the internal PE-header section, the value of
    the cpu at this time will determine whether a 32- or 64-bit PE binary is to be written.
<P>
    As in all binary formats, the listing will contain a binary map; see <A HREF="OUTPUTFORMATBIN.htm">Binary Output Format</A>
    for more details.
<P>
    If -pe is set, a few sections will be created internally: 
<DL>
<DD>   -.hdr$1 : section will contain the DOS MZ-stub.
<DD>   -.hdr$2 : section will contain the PE header
<DD>   -.hdr$3 : section will contain the PE object table
</DL>
<P>
    The default values in the PE header are
<TABLE CELLPADDING="4" CELLSPACING="2">
<TR><TH>Field</TH><TH>32-bit Value</TH><TH>64-bit Value (if different)</TH></TR>
<TR BGCOLOR="#E8E8E8"><TD>Signature</TD> <TD>"PE"</TD> <TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Machine</TD>   <TD>14Ch</TD> <TD>8664h</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Timestamp</TD> <TD>date &amp; time</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Size OptionalHeader</TD> <TD>0E0h</TD><TD>0F0h</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Characteristics</TD> <TD>10Fh</TD><TD>12Fh</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Magic</TD>     <TD>10Bh</TD><TD>20Bh</TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>LinkerVersion</TD><TD>5.1</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>ImageBase</TD><TD>400000h</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>SectionAlignment</TD><TD>1000h</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>FileAlignment</TD><TD>200h</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>OSVersion</TD><TD>4.0</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>ImageVersion</TD><TD>0.0</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>SubsystemVersion</TD><TD>4.0</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Win32Version</TD><TD>0</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Checksum</TD><TD>0</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>Subsystem</TD><TD>2 (=Console)</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>DllCharacteristics</TD><TD>0</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>SizeOfStack</TD><TD>100000h,1000h</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>SizeOfHeap</TD><TD>100000h,1000h</TD><TD></TD></TR>
<TR BGCOLOR="#E8E8E8"><TD>LoaderFlags</TD><TD>0</TD><TD></TD></TR>
</TABLE>
<P>
    To change the default values in the PE header there are two options. First, a
    predefined assembly-time variable <b>@pe_file_flags</b> will map the value
    of field <i>Characteristics</i> - changing the value of @pe_file_flags will also change the value
    in the header field. The other fields in the PE header are only accessible
    by setting the appropriate values in section .hdr$2. Fields not listed in the table
    above are set internally by the assembler to ensure data integrity and cannot be modified
    from within the assembly source.
<P>
    If the PE binary is to use <b>resources</b>, a .rsrc section has to be created which is to
    contain them. Defining the resources manually works and is doable, but it might become tedious
    if a lot of resource items are to be defined. Therefore tool <b>res2inc</b> is supplied, which
    allows to convert a compiled resource file (.RES) to an assembly include file.
<P>
    If a <b>dll</b> is created with -pe, one has to mark all procedures that are to be exported with
    the EXPORT attribute. If the exported names are to be undecorated, use the 
    <A HREF="CMDOPTZZE.htm">-zze</A> cmdline option.
<P>
    Sample <A HREF="AB06.htm">Win64_8</A> shows how a 64-bit Windows binary is created with -pe. It also
    shows how to define resources in .rsrc manually and how to modify default values of PE header fields.


</BODY>
</HTML>
