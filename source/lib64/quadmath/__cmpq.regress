include quadmath.inc

    .assert:on

mcmpq macro a, b
    local qa, qb
    .data
    qa oword a
    qb oword b
    .code
    __cmpq(addr qa, addr qb)
    exitm<eax>
    endm

    .code

main proc

    .assertd( mcmpq( 0.0,  1.0) == -1 )
    .assertd( mcmpq( 0.0,  0.0) == 0 )
    .assertd( mcmpq( 1.0,  0.0) == 1 )
    .assertd( mcmpq( 0.0,  1.0) == -1 )
    .assertd( mcmpq(-0.0,  0.0) == -1 )
    .assertd( mcmpq(-1.0, -2.0) == 1 )
    .assertd( mcmpq( 0.0, -1.0) == 1 )
    .assertd( mcmpq(-1.0, -1.0) == 0 )
    .assertd( mcmpq(-9.9, -9.9) == 0 )
    .assertd( mcmpq( 9223372036854775808.0, 9223372036854775808.0) == 0 )
    .assertd( mcmpq( 9223372036854775808.0, 9223372036854775807.0) == 1 )
    .assertd( mcmpq( 9223372036854775807.0, 9223372036854775808.0) == -1 )
    .assertd( mcmpq(-9223372036854775808.0, -9223372036854775808.0) == 0 )
    .assertd( mcmpq(-9223372036854775807.0, -9223372036854775808.0) == 1 )
    .assertd( mcmpq(-9223372036854775808.0, -9223372036854775807.0) == -1 )

    dec eax
    ret

main endp

    end
