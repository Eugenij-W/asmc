include quadmath.inc
include limits.inc
include errno.inc

    .assert:on

ftoquad macro r, h
  local b, q, d
    .data
    align 16
    q real16 r
    b real16 0.0
    d dd h
    .code
    __cvtss_q(addr b, addr d)
    mov eax,dword ptr b[12]
    mov edx,dword ptr q[12]
    exitm<.assert( eax == edx )>
    endm

errval macro retval, type:vararg
    mov edx,errno
    mov errno,0
    mov eax,edx
    exitm<.assert( eax == retval )>
    endm

.code

main proc

    mov errno,0

    errval( 0, ftoquad(0.0, 0))
    errval( 0, ftoquad(1.0, 0x3F800000))
    errval( 0, ftoquad(-2.0, 0xC0000000))
    errval( 0, ftoquad(3.402823466e38, 3.402823466e38))
    errval( 0, ftoquad(1.175494351e-38, 1.175494351e-38))
    errval( 0, ftoquad(-0.0, 0x80000000))
    errval( EDOM, ftoquad(0.0/0.0, 0x7F800000))
    xor eax,eax
    ret

main endp

    end
